package com.learn.base;
/**
 * @Auther:Qi Kaili
 * @Date: Created in 16:10 2022/4/11
 * @Description:
 * @version:1.0
 */
public class BaseDemo01 {
    public static void main(String[] args) {
        /*逻辑运算
        逻辑与、逻辑或
        短路或、短路与
        逻辑异或、逻辑反
        * */

        System.out.println(5^6);
        //5   00000101       int数据类型  4个字节，4*8=32
        //6   00000110
        //异或计算：如果a、b两个值不相同，则异或结果为1。如果a、b两个值相同，异或结果为0。
        //    00000011
        System.out.println(~6);
        //正数的原码反码补码都是一样的；负数的补码就是对反码加一
        /*正数取反  ：
        1、获得二进制（计算机多少位，二进制位数为多少==64）0表示正数，1表示负数
        6                      00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000110
        2、取反 得到最终结果的补码  11111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001
        3、取补码（取反再+1）                                                                     00000111
        最终结果：-7
        * */
        System.out.println(~(-6));
          /*负数取反  ：
        1、获得二进制（计算机多少位，二进制位数为多少==64）0表示正数，1表示负数
        -6                      10000000 00000000 00000000 00000000 00000000 00000000 00000000 00000110
        2、取反 得到最终结果的补码   01111111 11111111 11111111 11111111 11111111 11111111 11111111 11111001
        3、取补码（取反                                                                           00000110
        最终结果：5
        * */

    }
}
